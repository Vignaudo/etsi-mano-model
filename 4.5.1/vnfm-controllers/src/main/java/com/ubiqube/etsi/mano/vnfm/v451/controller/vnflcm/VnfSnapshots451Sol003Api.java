/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.27).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.ubiqube.etsi.mano.vnfm.v451.controller.vnflcm;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.core.io.Resource;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.ubiqube.etsi.mano.em.v451.model.vnfconfig.ProblemDetails;
import com.ubiqube.etsi.mano.em.v451.model.vnflcm.CreateVnfSnapshotInfoRequest;
import com.ubiqube.etsi.mano.em.v451.model.vnflcm.VnfSnapshotInfo;
import com.ubiqube.etsi.mano.vnfm.v451.model.vnflcm.VnfSnapshotInfoModificationRequest;
import com.ubiqube.etsi.mano.vnfm.v451.model.vnflcm.VnfSnapshotInfoModifications;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.validation.Valid;

@Validated
public interface VnfSnapshots451Sol003Api {

	Logger log = LoggerFactory.getLogger(VnfSnapshots451Sol003Api.class);

	default Optional<ObjectMapper> getObjectMapper() {
		return Optional.empty();
	}

	default Optional<HttpServletRequest> getRequest() {
		return Optional.empty();
	}

	default Optional<String> getAcceptHeader() {
		return getRequest().map(r -> r.getHeader("Accept"));
	}

	@Operation(summary = "", description = "The GET method queries information about multiple VNF snapshots. This method shall follow the provisions specified in the tables 5.4.23.3.2-1  and 5.4.23.3.2-2 for URI query parameters, request and response data structures,  and response codes. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "200", description = "200 OK  Shall be returned when information about zero or more VNF snapshots was queried successfully. The response body shall contain in an array the representations of zero or more  \"Individual VNF snapshot\" resources, as defined in clause 5.5.2.22. If the VNFM supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource, inclusion of the Link HTTP header in this response shall follow the provisions  in clause 5.4.2.3 of ETSI GS NFV-SOL 013. ", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = VnfSnapshotInfo.class)))),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the message content contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a message content with an empty array. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "416", description = "416 Range Not Satisfiable ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/vnf_snapshots", produces = { "application/json" }, method = RequestMethod.GET)
	default ResponseEntity<List<VnfSnapshotInfo>> vnfSnapshotsGet(
			@Parameter(in = ParameterIn.HEADER, description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. ", required = true, schema = @Schema()) @RequestHeader(value = "Accept", required = true) final String accept,
			@Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version,
			@Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization,

			@Parameter(in = ParameterIn.QUERY, description = "Attribute-based filtering expression according to clause 5.2 of ETSI GS NFV-SOL 013 [8]. The VNFM shall support receiving this parameter as part of the URI query string. The NFVO may supply this parameter. All attribute names that appear in the VnfSnapshot and in data types referenced from it shall be supported by the VNFM in the filter expression. ", schema = @Schema()) @Valid @RequestParam(value = "filter", required = false) final String filter,
			@Parameter(in = ParameterIn.QUERY, description = "Include all complex attributes in the response. See clause 5.3 of ETSI GS NFV-SOL 013 [8] for details. The VNFM shall support this parameter. ", schema = @Schema()) @Valid @RequestParam(value = "all_fields", required = false) final String allFields,
			@Parameter(in = ParameterIn.QUERY, description = "Complex attributes to be included into the response. See clause 5.3 of ETSI GS NFV-SOL 013 [8] for details. The VNFM should support this parameter. ", schema = @Schema()) @Valid @RequestParam(value = "fields", required = false) final String fields,

			@Parameter(in = ParameterIn.QUERY, description = "Complex attributes to be excluded from the response. See clause 5.3 of ETSI GS NFV-SOL 013 [8] for details. The VNFM should support this parameter. ", schema = @Schema()) @Valid @RequestParam(value = "exclude_fields", required = false) final String excludeFields,
			@Parameter(in = ParameterIn.QUERY, description = "Indicates to exclude the following complex attributes from the response. See clause 5.3 of ETSI GS NFV-SOL 013 [8] for details. The VNFM shall support this parameter. The following attributes shall be excluded from the VnfSnapshot structure in the response body if this parameter is provided, or none of the parameters \"all_fields,\" \"fields\", \"exclude_fields\", \"exclude_default\" are provided:   - vnfInstance   - vnfcSnapshots", schema = @Schema()) @Valid @RequestParam(value = "exclude_default", required = false) final String excludeDefault,

			@Parameter(in = ParameterIn.QUERY, description = "Marker to obtain the next page of a paged response. Shall be supported by the VNFM if the VNFM supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 [8] for this resource. ", schema = @Schema()) @Valid @RequestParam(value = "nextpage_opaque_marker", required = false) final String nextpageOpaqueMarker) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
			if (getAcceptHeader().get().contains("application/json")) {
				try {
					return new ResponseEntity<>(getObjectMapper().get().readValue(
							"[ {\n  \"vnfSnapshot\" : {\n    \"_links\" : {\n      \"self\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"creationStartedAt\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"vnfcSnapshots\" : [ {\n      \"storageSnapshotResources\" : [ {\n        \"storageSnapshotResource\" : { }\n      }, {\n        \"storageSnapshotResource\" : { }\n      } ],\n      \"computeSnapshotResource\" : {\n        \"containerNamespace\" : \"containerNamespace\",\n        \"vimLevelAdditionalResourceInfo\" : {\n          \"hostName\" : \"hostName\",\n          \"persistentVolume\" : \"persistentVolume\"\n        },\n        \"vimLevelResourceType\" : \"vimLevelResourceType\"\n      },\n      \"vnfcInstanceId\" : \"vnfcInstanceId\",\n      \"id\" : \"id\"\n    }, {\n      \"storageSnapshotResources\" : [ {\n        \"storageSnapshotResource\" : { }\n      }, {\n        \"storageSnapshotResource\" : { }\n      } ],\n      \"computeSnapshotResource\" : {\n        \"containerNamespace\" : \"containerNamespace\",\n        \"vimLevelAdditionalResourceInfo\" : {\n          \"hostName\" : \"hostName\",\n          \"persistentVolume\" : \"persistentVolume\"\n        },\n        \"vimLevelResourceType\" : \"vimLevelResourceType\"\n      },\n      \"vnfcInstanceId\" : \"vnfcInstanceId\",\n      \"id\" : \"id\"\n    } ],\n    \"vnfStateSnapshotInfo\" : {\n      \"isEncrypted\" : true,\n      \"checksum\" : \"checksum\"\n    },\n    \"vnfInstance\" : {\n      \"vnfProductName\" : \"vnfProductName\",\n      \"vimConnectionInfo\" : {\n        \"key\" : {\n          \"vimType\" : \"vimType\"\n        }\n      },\n      \"vnfProvider\" : \"vnfProvider\",\n      \"_links\" : { },\n      \"vnfConfigurableProperties\" : { },\n      \"cirConnectionInfo\" : { },\n      \"certificateInfo\" : {\n        \"certificateContents\" : [ {\n          \"serialNumber\" : 1,\n          \"certificateDescId\" : \"certificateDescId\",\n          \"subject\" : \"subject\",\n          \"publicKeyAlgorithm\" : \"publicKeyAlgorithm\",\n          \"publicKey\" : \"publicKey\",\n          \"signatureAlgorithm\" : \"signatureAlgorithm\",\n          \"issuer\" : \"issuer\",\n          \"notBefore\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"certificateType\" : \"VNFCI_CERT\"\n        }, {\n          \"serialNumber\" : 1,\n          \"certificateDescId\" : \"certificateDescId\",\n          \"subject\" : \"subject\",\n          \"publicKeyAlgorithm\" : \"publicKeyAlgorithm\",\n          \"publicKey\" : \"publicKey\",\n          \"signatureAlgorithm\" : \"signatureAlgorithm\",\n          \"issuer\" : \"issuer\",\n          \"notBefore\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"certificateType\" : \"VNFCI_CERT\"\n        } ],\n        \"certificateConfigurationInfo\" : {\n          \"cmfInfo\" : {\n            \"supportedProtocol\" : [ \"CMP\", \"CMP\" ],\n            \"endPoint\" : {\n              \"ipAddress\" : \"ipAddress\",\n              \"link\" : {\n                \"href\" : \"href\"\n              }\n            },\n            \"certificateChain\" : [ null, null ]\n          },\n          \"securityPolicy\" : [ {\n            \"maxValidityPeriod\" : 0.8008281904610115,\n            \"minimumKeyLength\" : 6.027456183070403,\n            \"allowedAlgorithm\" : \"allowedAlgorithm\"\n          }, {\n            \"maxValidityPeriod\" : 0.8008281904610115,\n            \"minimumKeyLength\" : 6.027456183070403,\n            \"allowedAlgorithm\" : \"allowedAlgorithm\"\n          } ],\n          \"certificateBaseProfile\" : [ {\n            \"subject\" : {\n              \"commonName\" : \"commonName\",\n              \"country\" : \"country\",\n              \"emailAddress\" : \"emailAddress\",\n              \"organization\" : \"organization\",\n              \"locality\" : \"locality\",\n              \"state\" : \"state\"\n            },\n            \"basicConstraints\" : \"basicConstraints\",\n            \"nameConstraints\" : [ \"nameConstraints\", \"nameConstraints\" ],\n            \"issuer\" : \"issuer\",\n            \"issuerAltName\" : [ \"issuerAltName\", \"issuerAltName\" ],\n            \"subjectAltName\" : [ \"subjectAltName\", \"subjectAltName\" ]\n          }, {\n            \"subject\" : {\n              \"commonName\" : \"commonName\",\n              \"country\" : \"country\",\n              \"emailAddress\" : \"emailAddress\",\n              \"organization\" : \"organization\",\n              \"locality\" : \"locality\",\n              \"state\" : \"state\"\n            },\n            \"basicConstraints\" : \"basicConstraints\",\n            \"nameConstraints\" : [ \"nameConstraints\", \"nameConstraints\" ],\n            \"issuer\" : \"issuer\",\n            \"issuerAltName\" : [ \"issuerAltName\", \"issuerAltName\" ],\n            \"subjectAltName\" : [ \"subjectAltName\", \"subjectAltName\" ]\n          } ]\n        }\n      },\n      \"instantiationState\" : \"NOT_INSTANTIATED\",\n      \"vnfInstanceDescription\" : \"vnfInstanceDescription\",\n      \"mciopRepositoryInfo\" : { },\n      \"instantiatedVnfInfo\" : {\n        \"scaleStatus\" : [ { }, { } ],\n        \"extManagedVirtualLinkInfo\" : [ {\n          \"vnfNetAttDefResource\" : [ null, null ],\n          \"vnfLinkPorts\" : [ {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          }, {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          } ]\n        }, {\n          \"vnfNetAttDefResource\" : [ null, null ],\n          \"vnfLinkPorts\" : [ {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          }, {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          } ]\n        } ],\n        \"vnfPaasServiceInfo\" : [ {\n          \"paasServiceHandle\" : { },\n          \"paasServiceType\" : \"paasServiceType\"\n        }, {\n          \"paasServiceHandle\" : { },\n          \"paasServiceType\" : \"paasServiceType\"\n        } ],\n        \"maxScaleLevels\" : [ null, null ],\n        \"selectedDeployableModule\" : [ null, null ],\n        \"vnfState\" : \"STARTED\",\n        \"virtualStorageResourceInfo\" : [ { }, { } ],\n        \"monitoringParameters\" : [ {\n          \"name\" : \"name\",\n          \"performanceMetric\" : \"performanceMetric\"\n        }, {\n          \"name\" : \"name\",\n          \"performanceMetric\" : \"performanceMetric\"\n        } ],\n        \"extVirtualLinkInfo\" : [ {\n          \"extNetAttDefResource\" : [ {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          }, {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          } ],\n          \"extLinkPorts\" : [ { }, { } ],\n          \"currentVnfExtCpData\" : [ {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          }, {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          } ]\n        }, {\n          \"extNetAttDefResource\" : [ {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          }, {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          } ],\n          \"extLinkPorts\" : [ { }, { } ],\n          \"currentVnfExtCpData\" : [ {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          }, {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          } ]\n        } ],\n        \"localizationLanguage\" : \"localizationLanguage\",\n        \"vnfVirtualLinkResourceInfo\" : [ {\n          \"vnfLinkPorts\" : [ null, null ]\n        }, {\n          \"vnfLinkPorts\" : [ null, null ]\n        } ],\n        \"vipCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ],\n          \"associatedVnfcCpIds\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ],\n          \"associatedVnfcCpIds\" : [ null, null ]\n        } ],\n        \"virtualCpInfo\" : [ {\n          \"resourceHandle\" : {\n            \"containerNamespace\" : \"containerNamespace\",\n            \"vimLevelAdditionalResourceInfo\" : {\n              \"hostName\" : \"hostName\",\n              \"persistentVolume\" : \"persistentVolume\"\n            },\n            \"vimLevelResourceType\" : \"vimLevelResourceType\"\n          },\n          \"vduIds\" : [ null, null ],\n          \"cpProtocolInfo\" : [ null, null ],\n          \"additionalServiceInfo\" : [ {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          }, {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          } ]\n        }, {\n          \"resourceHandle\" : {\n            \"containerNamespace\" : \"containerNamespace\",\n            \"vimLevelAdditionalResourceInfo\" : {\n              \"hostName\" : \"hostName\",\n              \"persistentVolume\" : \"persistentVolume\"\n            },\n            \"vimLevelResourceType\" : \"vimLevelResourceType\"\n          },\n          \"vduIds\" : [ null, null ],\n          \"cpProtocolInfo\" : [ null, null ],\n          \"additionalServiceInfo\" : [ {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          }, {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          } ]\n        } ],\n        \"vnfcResourceInfo\" : [ {\n          \"storageResourceIds\" : [ null, null ],\n          \"vnfcCpInfo\" : [ {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          }, {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          } ]\n        }, {\n          \"storageResourceIds\" : [ null, null ],\n          \"vnfcCpInfo\" : [ {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          }, {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          } ]\n        } ],\n        \"extCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          }, {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          } ],\n          \"id\" : \"id\",\n          \"netAttDefResourceId\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          }, {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          } ],\n          \"id\" : \"id\",\n          \"netAttDefResourceId\" : [ null, null ]\n        } ],\n        \"mcioInfo\" : [ {\n          \"mcioName\" : \"mcioName\",\n          \"availableInstances\" : 7,\n          \"mcioNamespace\" : \"mcioNamespace\",\n          \"desiredInstances\" : 2,\n          \"mcioType\" : \"Deployment\"\n        }, {\n          \"mcioName\" : \"mcioName\",\n          \"availableInstances\" : 7,\n          \"mcioNamespace\" : \"mcioNamespace\",\n          \"desiredInstances\" : 2,\n          \"mcioType\" : \"Deployment\"\n        } ]\n      },\n      \"vnfInstanceName\" : \"vnfInstanceName\",\n      \"id\" : \"id\",\n      \"vnfSoftwareVersion\" : \"vnfSoftwareVersion\"\n    }\n  },\n  \"_links\" : { },\n  \"id\" : \"id\"\n}, {\n  \"vnfSnapshot\" : {\n    \"_links\" : {\n      \"self\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"creationStartedAt\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"vnfcSnapshots\" : [ {\n      \"storageSnapshotResources\" : [ {\n        \"storageSnapshotResource\" : { }\n      }, {\n        \"storageSnapshotResource\" : { }\n      } ],\n      \"computeSnapshotResource\" : {\n        \"containerNamespace\" : \"containerNamespace\",\n        \"vimLevelAdditionalResourceInfo\" : {\n          \"hostName\" : \"hostName\",\n          \"persistentVolume\" : \"persistentVolume\"\n        },\n        \"vimLevelResourceType\" : \"vimLevelResourceType\"\n      },\n      \"vnfcInstanceId\" : \"vnfcInstanceId\",\n      \"id\" : \"id\"\n    }, {\n      \"storageSnapshotResources\" : [ {\n        \"storageSnapshotResource\" : { }\n      }, {\n        \"storageSnapshotResource\" : { }\n      } ],\n      \"computeSnapshotResource\" : {\n        \"containerNamespace\" : \"containerNamespace\",\n        \"vimLevelAdditionalResourceInfo\" : {\n          \"hostName\" : \"hostName\",\n          \"persistentVolume\" : \"persistentVolume\"\n        },\n        \"vimLevelResourceType\" : \"vimLevelResourceType\"\n      },\n      \"vnfcInstanceId\" : \"vnfcInstanceId\",\n      \"id\" : \"id\"\n    } ],\n    \"vnfStateSnapshotInfo\" : {\n      \"isEncrypted\" : true,\n      \"checksum\" : \"checksum\"\n    },\n    \"vnfInstance\" : {\n      \"vnfProductName\" : \"vnfProductName\",\n      \"vimConnectionInfo\" : {\n        \"key\" : {\n          \"vimType\" : \"vimType\"\n        }\n      },\n      \"vnfProvider\" : \"vnfProvider\",\n      \"_links\" : { },\n      \"vnfConfigurableProperties\" : { },\n      \"cirConnectionInfo\" : { },\n      \"certificateInfo\" : {\n        \"certificateContents\" : [ {\n          \"serialNumber\" : 1,\n          \"certificateDescId\" : \"certificateDescId\",\n          \"subject\" : \"subject\",\n          \"publicKeyAlgorithm\" : \"publicKeyAlgorithm\",\n          \"publicKey\" : \"publicKey\",\n          \"signatureAlgorithm\" : \"signatureAlgorithm\",\n          \"issuer\" : \"issuer\",\n          \"notBefore\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"certificateType\" : \"VNFCI_CERT\"\n        }, {\n          \"serialNumber\" : 1,\n          \"certificateDescId\" : \"certificateDescId\",\n          \"subject\" : \"subject\",\n          \"publicKeyAlgorithm\" : \"publicKeyAlgorithm\",\n          \"publicKey\" : \"publicKey\",\n          \"signatureAlgorithm\" : \"signatureAlgorithm\",\n          \"issuer\" : \"issuer\",\n          \"notBefore\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"certificateType\" : \"VNFCI_CERT\"\n        } ],\n        \"certificateConfigurationInfo\" : {\n          \"cmfInfo\" : {\n            \"supportedProtocol\" : [ \"CMP\", \"CMP\" ],\n            \"endPoint\" : {\n              \"ipAddress\" : \"ipAddress\",\n              \"link\" : {\n                \"href\" : \"href\"\n              }\n            },\n            \"certificateChain\" : [ null, null ]\n          },\n          \"securityPolicy\" : [ {\n            \"maxValidityPeriod\" : 0.8008281904610115,\n            \"minimumKeyLength\" : 6.027456183070403,\n            \"allowedAlgorithm\" : \"allowedAlgorithm\"\n          }, {\n            \"maxValidityPeriod\" : 0.8008281904610115,\n            \"minimumKeyLength\" : 6.027456183070403,\n            \"allowedAlgorithm\" : \"allowedAlgorithm\"\n          } ],\n          \"certificateBaseProfile\" : [ {\n            \"subject\" : {\n              \"commonName\" : \"commonName\",\n              \"country\" : \"country\",\n              \"emailAddress\" : \"emailAddress\",\n              \"organization\" : \"organization\",\n              \"locality\" : \"locality\",\n              \"state\" : \"state\"\n            },\n            \"basicConstraints\" : \"basicConstraints\",\n            \"nameConstraints\" : [ \"nameConstraints\", \"nameConstraints\" ],\n            \"issuer\" : \"issuer\",\n            \"issuerAltName\" : [ \"issuerAltName\", \"issuerAltName\" ],\n            \"subjectAltName\" : [ \"subjectAltName\", \"subjectAltName\" ]\n          }, {\n            \"subject\" : {\n              \"commonName\" : \"commonName\",\n              \"country\" : \"country\",\n              \"emailAddress\" : \"emailAddress\",\n              \"organization\" : \"organization\",\n              \"locality\" : \"locality\",\n              \"state\" : \"state\"\n            },\n            \"basicConstraints\" : \"basicConstraints\",\n            \"nameConstraints\" : [ \"nameConstraints\", \"nameConstraints\" ],\n            \"issuer\" : \"issuer\",\n            \"issuerAltName\" : [ \"issuerAltName\", \"issuerAltName\" ],\n            \"subjectAltName\" : [ \"subjectAltName\", \"subjectAltName\" ]\n          } ]\n        }\n      },\n      \"instantiationState\" : \"NOT_INSTANTIATED\",\n      \"vnfInstanceDescription\" : \"vnfInstanceDescription\",\n      \"mciopRepositoryInfo\" : { },\n      \"instantiatedVnfInfo\" : {\n        \"scaleStatus\" : [ { }, { } ],\n        \"extManagedVirtualLinkInfo\" : [ {\n          \"vnfNetAttDefResource\" : [ null, null ],\n          \"vnfLinkPorts\" : [ {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          }, {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          } ]\n        }, {\n          \"vnfNetAttDefResource\" : [ null, null ],\n          \"vnfLinkPorts\" : [ {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          }, {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          } ]\n        } ],\n        \"vnfPaasServiceInfo\" : [ {\n          \"paasServiceHandle\" : { },\n          \"paasServiceType\" : \"paasServiceType\"\n        }, {\n          \"paasServiceHandle\" : { },\n          \"paasServiceType\" : \"paasServiceType\"\n        } ],\n        \"maxScaleLevels\" : [ null, null ],\n        \"selectedDeployableModule\" : [ null, null ],\n        \"vnfState\" : \"STARTED\",\n        \"virtualStorageResourceInfo\" : [ { }, { } ],\n        \"monitoringParameters\" : [ {\n          \"name\" : \"name\",\n          \"performanceMetric\" : \"performanceMetric\"\n        }, {\n          \"name\" : \"name\",\n          \"performanceMetric\" : \"performanceMetric\"\n        } ],\n        \"extVirtualLinkInfo\" : [ {\n          \"extNetAttDefResource\" : [ {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          }, {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          } ],\n          \"extLinkPorts\" : [ { }, { } ],\n          \"currentVnfExtCpData\" : [ {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          }, {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          } ]\n        }, {\n          \"extNetAttDefResource\" : [ {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          }, {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          } ],\n          \"extLinkPorts\" : [ { }, { } ],\n          \"currentVnfExtCpData\" : [ {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          }, {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          } ]\n        } ],\n        \"localizationLanguage\" : \"localizationLanguage\",\n        \"vnfVirtualLinkResourceInfo\" : [ {\n          \"vnfLinkPorts\" : [ null, null ]\n        }, {\n          \"vnfLinkPorts\" : [ null, null ]\n        } ],\n        \"vipCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ],\n          \"associatedVnfcCpIds\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ],\n          \"associatedVnfcCpIds\" : [ null, null ]\n        } ],\n        \"virtualCpInfo\" : [ {\n          \"resourceHandle\" : {\n            \"containerNamespace\" : \"containerNamespace\",\n            \"vimLevelAdditionalResourceInfo\" : {\n              \"hostName\" : \"hostName\",\n              \"persistentVolume\" : \"persistentVolume\"\n            },\n            \"vimLevelResourceType\" : \"vimLevelResourceType\"\n          },\n          \"vduIds\" : [ null, null ],\n          \"cpProtocolInfo\" : [ null, null ],\n          \"additionalServiceInfo\" : [ {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          }, {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          } ]\n        }, {\n          \"resourceHandle\" : {\n            \"containerNamespace\" : \"containerNamespace\",\n            \"vimLevelAdditionalResourceInfo\" : {\n              \"hostName\" : \"hostName\",\n              \"persistentVolume\" : \"persistentVolume\"\n            },\n            \"vimLevelResourceType\" : \"vimLevelResourceType\"\n          },\n          \"vduIds\" : [ null, null ],\n          \"cpProtocolInfo\" : [ null, null ],\n          \"additionalServiceInfo\" : [ {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          }, {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          } ]\n        } ],\n        \"vnfcResourceInfo\" : [ {\n          \"storageResourceIds\" : [ null, null ],\n          \"vnfcCpInfo\" : [ {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          }, {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          } ]\n        }, {\n          \"storageResourceIds\" : [ null, null ],\n          \"vnfcCpInfo\" : [ {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          }, {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          } ]\n        } ],\n        \"extCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          }, {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          } ],\n          \"id\" : \"id\",\n          \"netAttDefResourceId\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          }, {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          } ],\n          \"id\" : \"id\",\n          \"netAttDefResourceId\" : [ null, null ]\n        } ],\n        \"mcioInfo\" : [ {\n          \"mcioName\" : \"mcioName\",\n          \"availableInstances\" : 7,\n          \"mcioNamespace\" : \"mcioNamespace\",\n          \"desiredInstances\" : 2,\n          \"mcioType\" : \"Deployment\"\n        }, {\n          \"mcioName\" : \"mcioName\",\n          \"availableInstances\" : 7,\n          \"mcioNamespace\" : \"mcioNamespace\",\n          \"desiredInstances\" : 2,\n          \"mcioType\" : \"Deployment\"\n        } ]\n      },\n      \"vnfInstanceName\" : \"vnfInstanceName\",\n      \"id\" : \"id\",\n      \"vnfSoftwareVersion\" : \"vnfSoftwareVersion\"\n    }\n  },\n  \"_links\" : { },\n  \"id\" : \"id\"\n} ]",
							List.class), HttpStatus.NOT_IMPLEMENTED);
				} catch (final IOException e) {
					log.error("Couldn't serialize response for content type application/json", e);
					return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
				}
			}
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default VnfSnapshotsApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@Operation(summary = "", description = "The POST method creates a new \"Individual VNF snapshot\" resource. See clause 5.4.23.3.1. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "201", description = "201 CREATED  Shall be returned when an \"Individual VNF snapshot\" resource has been created  successfully. The response body shall contain a representation of the new \"Individual VNF snapshot\"  resource, as defined in clause 5.5.2.22. The HTTP response shall include a \"Location\" HTTP header that contains the resource URI  of the \"Individual VNF snapshot\" resource. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = VnfSnapshotInfo.class))),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the message content contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a message content with an empty array. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/vnf_snapshots", produces = { "application/json" }, consumes = { "application/json" }, method = RequestMethod.POST)
	default ResponseEntity<VnfSnapshotInfo> vnfSnapshotsPost(
			@Parameter(in = ParameterIn.HEADER, description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. ", required = true, schema = @Schema()) @RequestHeader(value = "Accept", required = true) final String accept,
			@Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version,
			@Parameter(in = ParameterIn.DEFAULT, description = "The VNF snapshot resource creation parameters, as defined in clause 5.5.2.20.", required = true, schema = @Schema()) @Valid @RequestBody final CreateVnfSnapshotInfoRequest body,
			@Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
			if (getAcceptHeader().get().contains("application/json")) {
				try {
					return new ResponseEntity<>(getObjectMapper().get().readValue(
							"{\n  \"vnfSnapshot\" : {\n    \"_links\" : {\n      \"self\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"creationStartedAt\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"vnfcSnapshots\" : [ {\n      \"storageSnapshotResources\" : [ {\n        \"storageSnapshotResource\" : { }\n      }, {\n        \"storageSnapshotResource\" : { }\n      } ],\n      \"computeSnapshotResource\" : {\n        \"containerNamespace\" : \"containerNamespace\",\n        \"vimLevelAdditionalResourceInfo\" : {\n          \"hostName\" : \"hostName\",\n          \"persistentVolume\" : \"persistentVolume\"\n        },\n        \"vimLevelResourceType\" : \"vimLevelResourceType\"\n      },\n      \"vnfcInstanceId\" : \"vnfcInstanceId\",\n      \"id\" : \"id\"\n    }, {\n      \"storageSnapshotResources\" : [ {\n        \"storageSnapshotResource\" : { }\n      }, {\n        \"storageSnapshotResource\" : { }\n      } ],\n      \"computeSnapshotResource\" : {\n        \"containerNamespace\" : \"containerNamespace\",\n        \"vimLevelAdditionalResourceInfo\" : {\n          \"hostName\" : \"hostName\",\n          \"persistentVolume\" : \"persistentVolume\"\n        },\n        \"vimLevelResourceType\" : \"vimLevelResourceType\"\n      },\n      \"vnfcInstanceId\" : \"vnfcInstanceId\",\n      \"id\" : \"id\"\n    } ],\n    \"vnfStateSnapshotInfo\" : {\n      \"isEncrypted\" : true,\n      \"checksum\" : \"checksum\"\n    },\n    \"vnfInstance\" : {\n      \"vnfProductName\" : \"vnfProductName\",\n      \"vimConnectionInfo\" : {\n        \"key\" : {\n          \"vimType\" : \"vimType\"\n        }\n      },\n      \"vnfProvider\" : \"vnfProvider\",\n      \"_links\" : { },\n      \"vnfConfigurableProperties\" : { },\n      \"cirConnectionInfo\" : { },\n      \"certificateInfo\" : {\n        \"certificateContents\" : [ {\n          \"serialNumber\" : 1,\n          \"certificateDescId\" : \"certificateDescId\",\n          \"subject\" : \"subject\",\n          \"publicKeyAlgorithm\" : \"publicKeyAlgorithm\",\n          \"publicKey\" : \"publicKey\",\n          \"signatureAlgorithm\" : \"signatureAlgorithm\",\n          \"issuer\" : \"issuer\",\n          \"notBefore\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"certificateType\" : \"VNFCI_CERT\"\n        }, {\n          \"serialNumber\" : 1,\n          \"certificateDescId\" : \"certificateDescId\",\n          \"subject\" : \"subject\",\n          \"publicKeyAlgorithm\" : \"publicKeyAlgorithm\",\n          \"publicKey\" : \"publicKey\",\n          \"signatureAlgorithm\" : \"signatureAlgorithm\",\n          \"issuer\" : \"issuer\",\n          \"notBefore\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"certificateType\" : \"VNFCI_CERT\"\n        } ],\n        \"certificateConfigurationInfo\" : {\n          \"cmfInfo\" : {\n            \"supportedProtocol\" : [ \"CMP\", \"CMP\" ],\n            \"endPoint\" : {\n              \"ipAddress\" : \"ipAddress\",\n              \"link\" : {\n                \"href\" : \"href\"\n              }\n            },\n            \"certificateChain\" : [ null, null ]\n          },\n          \"securityPolicy\" : [ {\n            \"maxValidityPeriod\" : 0.8008281904610115,\n            \"minimumKeyLength\" : 6.027456183070403,\n            \"allowedAlgorithm\" : \"allowedAlgorithm\"\n          }, {\n            \"maxValidityPeriod\" : 0.8008281904610115,\n            \"minimumKeyLength\" : 6.027456183070403,\n            \"allowedAlgorithm\" : \"allowedAlgorithm\"\n          } ],\n          \"certificateBaseProfile\" : [ {\n            \"subject\" : {\n              \"commonName\" : \"commonName\",\n              \"country\" : \"country\",\n              \"emailAddress\" : \"emailAddress\",\n              \"organization\" : \"organization\",\n              \"locality\" : \"locality\",\n              \"state\" : \"state\"\n            },\n            \"basicConstraints\" : \"basicConstraints\",\n            \"nameConstraints\" : [ \"nameConstraints\", \"nameConstraints\" ],\n            \"issuer\" : \"issuer\",\n            \"issuerAltName\" : [ \"issuerAltName\", \"issuerAltName\" ],\n            \"subjectAltName\" : [ \"subjectAltName\", \"subjectAltName\" ]\n          }, {\n            \"subject\" : {\n              \"commonName\" : \"commonName\",\n              \"country\" : \"country\",\n              \"emailAddress\" : \"emailAddress\",\n              \"organization\" : \"organization\",\n              \"locality\" : \"locality\",\n              \"state\" : \"state\"\n            },\n            \"basicConstraints\" : \"basicConstraints\",\n            \"nameConstraints\" : [ \"nameConstraints\", \"nameConstraints\" ],\n            \"issuer\" : \"issuer\",\n            \"issuerAltName\" : [ \"issuerAltName\", \"issuerAltName\" ],\n            \"subjectAltName\" : [ \"subjectAltName\", \"subjectAltName\" ]\n          } ]\n        }\n      },\n      \"instantiationState\" : \"NOT_INSTANTIATED\",\n      \"vnfInstanceDescription\" : \"vnfInstanceDescription\",\n      \"mciopRepositoryInfo\" : { },\n      \"instantiatedVnfInfo\" : {\n        \"scaleStatus\" : [ { }, { } ],\n        \"extManagedVirtualLinkInfo\" : [ {\n          \"vnfNetAttDefResource\" : [ null, null ],\n          \"vnfLinkPorts\" : [ {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          }, {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          } ]\n        }, {\n          \"vnfNetAttDefResource\" : [ null, null ],\n          \"vnfLinkPorts\" : [ {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          }, {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          } ]\n        } ],\n        \"vnfPaasServiceInfo\" : [ {\n          \"paasServiceHandle\" : { },\n          \"paasServiceType\" : \"paasServiceType\"\n        }, {\n          \"paasServiceHandle\" : { },\n          \"paasServiceType\" : \"paasServiceType\"\n        } ],\n        \"maxScaleLevels\" : [ null, null ],\n        \"selectedDeployableModule\" : [ null, null ],\n        \"vnfState\" : \"STARTED\",\n        \"virtualStorageResourceInfo\" : [ { }, { } ],\n        \"monitoringParameters\" : [ {\n          \"name\" : \"name\",\n          \"performanceMetric\" : \"performanceMetric\"\n        }, {\n          \"name\" : \"name\",\n          \"performanceMetric\" : \"performanceMetric\"\n        } ],\n        \"extVirtualLinkInfo\" : [ {\n          \"extNetAttDefResource\" : [ {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          }, {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          } ],\n          \"extLinkPorts\" : [ { }, { } ],\n          \"currentVnfExtCpData\" : [ {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          }, {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          } ]\n        }, {\n          \"extNetAttDefResource\" : [ {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          }, {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          } ],\n          \"extLinkPorts\" : [ { }, { } ],\n          \"currentVnfExtCpData\" : [ {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          }, {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          } ]\n        } ],\n        \"localizationLanguage\" : \"localizationLanguage\",\n        \"vnfVirtualLinkResourceInfo\" : [ {\n          \"vnfLinkPorts\" : [ null, null ]\n        }, {\n          \"vnfLinkPorts\" : [ null, null ]\n        } ],\n        \"vipCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ],\n          \"associatedVnfcCpIds\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ],\n          \"associatedVnfcCpIds\" : [ null, null ]\n        } ],\n        \"virtualCpInfo\" : [ {\n          \"resourceHandle\" : {\n            \"containerNamespace\" : \"containerNamespace\",\n            \"vimLevelAdditionalResourceInfo\" : {\n              \"hostName\" : \"hostName\",\n              \"persistentVolume\" : \"persistentVolume\"\n            },\n            \"vimLevelResourceType\" : \"vimLevelResourceType\"\n          },\n          \"vduIds\" : [ null, null ],\n          \"cpProtocolInfo\" : [ null, null ],\n          \"additionalServiceInfo\" : [ {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          }, {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          } ]\n        }, {\n          \"resourceHandle\" : {\n            \"containerNamespace\" : \"containerNamespace\",\n            \"vimLevelAdditionalResourceInfo\" : {\n              \"hostName\" : \"hostName\",\n              \"persistentVolume\" : \"persistentVolume\"\n            },\n            \"vimLevelResourceType\" : \"vimLevelResourceType\"\n          },\n          \"vduIds\" : [ null, null ],\n          \"cpProtocolInfo\" : [ null, null ],\n          \"additionalServiceInfo\" : [ {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          }, {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          } ]\n        } ],\n        \"vnfcResourceInfo\" : [ {\n          \"storageResourceIds\" : [ null, null ],\n          \"vnfcCpInfo\" : [ {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          }, {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          } ]\n        }, {\n          \"storageResourceIds\" : [ null, null ],\n          \"vnfcCpInfo\" : [ {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          }, {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          } ]\n        } ],\n        \"extCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          }, {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          } ],\n          \"id\" : \"id\",\n          \"netAttDefResourceId\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          }, {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          } ],\n          \"id\" : \"id\",\n          \"netAttDefResourceId\" : [ null, null ]\n        } ],\n        \"mcioInfo\" : [ {\n          \"mcioName\" : \"mcioName\",\n          \"availableInstances\" : 7,\n          \"mcioNamespace\" : \"mcioNamespace\",\n          \"desiredInstances\" : 2,\n          \"mcioType\" : \"Deployment\"\n        }, {\n          \"mcioName\" : \"mcioName\",\n          \"availableInstances\" : 7,\n          \"mcioNamespace\" : \"mcioNamespace\",\n          \"desiredInstances\" : 2,\n          \"mcioType\" : \"Deployment\"\n        } ]\n      },\n      \"vnfInstanceName\" : \"vnfInstanceName\",\n      \"id\" : \"id\",\n      \"vnfSoftwareVersion\" : \"vnfSoftwareVersion\"\n    }\n  },\n  \"_links\" : { },\n  \"id\" : \"id\"\n}",
							VnfSnapshotInfo.class), HttpStatus.NOT_IMPLEMENTED);
				} catch (final IOException e) {
					log.error("Couldn't serialize response for content type application/json", e);
					return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
				}
			}
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default VnfSnapshotsApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@Operation(summary = "", description = "This method deletes an \"Individual VNF snapshot\" resource and the associated VNF snapshot information managed by the VNFM, and any resource associated to the VNF snapshot managed by the VIM. See clause 5.4.24.3.5. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "204", description = "204 NO CONTENT  Shall be returned when the VNF snapshot resource and the associated VNF snapshot were  deleted successfully. The response body shall be empty. "),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the message content contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a message content with an empty array. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "409", description = "409 CONFLICT  Shall be returned upon the following error: The operation cannot be executed currently, due to a conflict with the state of the resource. Typically, this is due to the fact that the VNF snapshot is in use by some operation such as reverting a VNF instance to a VNF snapshot or creating a VNF snapshot package. The response body shall contain a ProblemDetails structure, in which the \"detail\" attribute shall convey more information about the error. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "412", description = "412 PRECONDITION FAILED Error: A precondition given in an HTTP request header is not fulfilled. Typically, this is due to an ETag mismatch, indicating that the resource was modified by another entity. The response body should contain a ProblemDetails structure, in which the \"detail\" attribute should convey more information about the error. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/vnf_snapshots/{vnfSnapshotInfoId}", produces = { "application/json" }, method = RequestMethod.DELETE)
	default ResponseEntity<Void> vnfSnapshotsVnfSnapshotInfoIdDelete(
			@Parameter(in = ParameterIn.PATH, description = "Identifier of the \"Individual VNF snapshot\" resource. This identifier can be retrieved  from the resource referenced by the \"Location\" HTTP header in the response to a POST request  creating a new VNF snapshot resource. It can also be retrieved from the \"id\" attribute in the message content of that response.         ", required = true, schema = @Schema()) @PathVariable("vnfSnapshotInfoId") final String vnfSnapshotInfoId,
			@Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version,
			@Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default VnfSnapshotsApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@Operation(summary = "", description = "The GET method retrieves information about a VNF snapshot by reading an \"Individual VNF snapshot\" resource. See clause 5.4.24.3.2. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "200", description = "200 OK  Shall be returned when information about an individual VNF snapshot was read successfully. The response body shall contain a representation of the \"Individual VNF snapshot\" resource,  as defined in clause 5.5.2.22. ", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = VnfSnapshotInfo.class)))),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the message content contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a message content with an empty array. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "416", description = "416 Range Not Satisfiable ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/vnf_snapshots/{vnfSnapshotInfoId}", produces = { "application/json" }, method = RequestMethod.GET)
	default ResponseEntity<List<VnfSnapshotInfo>> vnfSnapshotsVnfSnapshotInfoIdGet(
			@Parameter(in = ParameterIn.PATH, description = "Identifier of the \"Individual VNF snapshot\" resource. This identifier can be retrieved  from the resource referenced by the \"Location\" HTTP header in the response to a POST request  creating a new VNF snapshot resource. It can also be retrieved from the \"id\" attribute in the message content of that response.         ", required = true, schema = @Schema()) @PathVariable("vnfSnapshotInfoId") final String vnfSnapshotInfoId,
			@Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version,
			@Parameter(in = ParameterIn.HEADER, description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. ", required = true, schema = @Schema()) @RequestHeader(value = "Accept", required = true) final String accept,

			@Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
			if (getAcceptHeader().get().contains("application/json")) {
				try {
					return new ResponseEntity<>(getObjectMapper().get().readValue(
							"[ {\n  \"vnfSnapshot\" : {\n    \"_links\" : {\n      \"self\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"creationStartedAt\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"vnfcSnapshots\" : [ {\n      \"storageSnapshotResources\" : [ {\n        \"storageSnapshotResource\" : { }\n      }, {\n        \"storageSnapshotResource\" : { }\n      } ],\n      \"computeSnapshotResource\" : {\n        \"containerNamespace\" : \"containerNamespace\",\n        \"vimLevelAdditionalResourceInfo\" : {\n          \"hostName\" : \"hostName\",\n          \"persistentVolume\" : \"persistentVolume\"\n        },\n        \"vimLevelResourceType\" : \"vimLevelResourceType\"\n      },\n      \"vnfcInstanceId\" : \"vnfcInstanceId\",\n      \"id\" : \"id\"\n    }, {\n      \"storageSnapshotResources\" : [ {\n        \"storageSnapshotResource\" : { }\n      }, {\n        \"storageSnapshotResource\" : { }\n      } ],\n      \"computeSnapshotResource\" : {\n        \"containerNamespace\" : \"containerNamespace\",\n        \"vimLevelAdditionalResourceInfo\" : {\n          \"hostName\" : \"hostName\",\n          \"persistentVolume\" : \"persistentVolume\"\n        },\n        \"vimLevelResourceType\" : \"vimLevelResourceType\"\n      },\n      \"vnfcInstanceId\" : \"vnfcInstanceId\",\n      \"id\" : \"id\"\n    } ],\n    \"vnfStateSnapshotInfo\" : {\n      \"isEncrypted\" : true,\n      \"checksum\" : \"checksum\"\n    },\n    \"vnfInstance\" : {\n      \"vnfProductName\" : \"vnfProductName\",\n      \"vimConnectionInfo\" : {\n        \"key\" : {\n          \"vimType\" : \"vimType\"\n        }\n      },\n      \"vnfProvider\" : \"vnfProvider\",\n      \"_links\" : { },\n      \"vnfConfigurableProperties\" : { },\n      \"cirConnectionInfo\" : { },\n      \"certificateInfo\" : {\n        \"certificateContents\" : [ {\n          \"serialNumber\" : 1,\n          \"certificateDescId\" : \"certificateDescId\",\n          \"subject\" : \"subject\",\n          \"publicKeyAlgorithm\" : \"publicKeyAlgorithm\",\n          \"publicKey\" : \"publicKey\",\n          \"signatureAlgorithm\" : \"signatureAlgorithm\",\n          \"issuer\" : \"issuer\",\n          \"notBefore\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"certificateType\" : \"VNFCI_CERT\"\n        }, {\n          \"serialNumber\" : 1,\n          \"certificateDescId\" : \"certificateDescId\",\n          \"subject\" : \"subject\",\n          \"publicKeyAlgorithm\" : \"publicKeyAlgorithm\",\n          \"publicKey\" : \"publicKey\",\n          \"signatureAlgorithm\" : \"signatureAlgorithm\",\n          \"issuer\" : \"issuer\",\n          \"notBefore\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"certificateType\" : \"VNFCI_CERT\"\n        } ],\n        \"certificateConfigurationInfo\" : {\n          \"cmfInfo\" : {\n            \"supportedProtocol\" : [ \"CMP\", \"CMP\" ],\n            \"endPoint\" : {\n              \"ipAddress\" : \"ipAddress\",\n              \"link\" : {\n                \"href\" : \"href\"\n              }\n            },\n            \"certificateChain\" : [ null, null ]\n          },\n          \"securityPolicy\" : [ {\n            \"maxValidityPeriod\" : 0.8008281904610115,\n            \"minimumKeyLength\" : 6.027456183070403,\n            \"allowedAlgorithm\" : \"allowedAlgorithm\"\n          }, {\n            \"maxValidityPeriod\" : 0.8008281904610115,\n            \"minimumKeyLength\" : 6.027456183070403,\n            \"allowedAlgorithm\" : \"allowedAlgorithm\"\n          } ],\n          \"certificateBaseProfile\" : [ {\n            \"subject\" : {\n              \"commonName\" : \"commonName\",\n              \"country\" : \"country\",\n              \"emailAddress\" : \"emailAddress\",\n              \"organization\" : \"organization\",\n              \"locality\" : \"locality\",\n              \"state\" : \"state\"\n            },\n            \"basicConstraints\" : \"basicConstraints\",\n            \"nameConstraints\" : [ \"nameConstraints\", \"nameConstraints\" ],\n            \"issuer\" : \"issuer\",\n            \"issuerAltName\" : [ \"issuerAltName\", \"issuerAltName\" ],\n            \"subjectAltName\" : [ \"subjectAltName\", \"subjectAltName\" ]\n          }, {\n            \"subject\" : {\n              \"commonName\" : \"commonName\",\n              \"country\" : \"country\",\n              \"emailAddress\" : \"emailAddress\",\n              \"organization\" : \"organization\",\n              \"locality\" : \"locality\",\n              \"state\" : \"state\"\n            },\n            \"basicConstraints\" : \"basicConstraints\",\n            \"nameConstraints\" : [ \"nameConstraints\", \"nameConstraints\" ],\n            \"issuer\" : \"issuer\",\n            \"issuerAltName\" : [ \"issuerAltName\", \"issuerAltName\" ],\n            \"subjectAltName\" : [ \"subjectAltName\", \"subjectAltName\" ]\n          } ]\n        }\n      },\n      \"instantiationState\" : \"NOT_INSTANTIATED\",\n      \"vnfInstanceDescription\" : \"vnfInstanceDescription\",\n      \"mciopRepositoryInfo\" : { },\n      \"instantiatedVnfInfo\" : {\n        \"scaleStatus\" : [ { }, { } ],\n        \"extManagedVirtualLinkInfo\" : [ {\n          \"vnfNetAttDefResource\" : [ null, null ],\n          \"vnfLinkPorts\" : [ {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          }, {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          } ]\n        }, {\n          \"vnfNetAttDefResource\" : [ null, null ],\n          \"vnfLinkPorts\" : [ {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          }, {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          } ]\n        } ],\n        \"vnfPaasServiceInfo\" : [ {\n          \"paasServiceHandle\" : { },\n          \"paasServiceType\" : \"paasServiceType\"\n        }, {\n          \"paasServiceHandle\" : { },\n          \"paasServiceType\" : \"paasServiceType\"\n        } ],\n        \"maxScaleLevels\" : [ null, null ],\n        \"selectedDeployableModule\" : [ null, null ],\n        \"vnfState\" : \"STARTED\",\n        \"virtualStorageResourceInfo\" : [ { }, { } ],\n        \"monitoringParameters\" : [ {\n          \"name\" : \"name\",\n          \"performanceMetric\" : \"performanceMetric\"\n        }, {\n          \"name\" : \"name\",\n          \"performanceMetric\" : \"performanceMetric\"\n        } ],\n        \"extVirtualLinkInfo\" : [ {\n          \"extNetAttDefResource\" : [ {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          }, {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          } ],\n          \"extLinkPorts\" : [ { }, { } ],\n          \"currentVnfExtCpData\" : [ {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          }, {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          } ]\n        }, {\n          \"extNetAttDefResource\" : [ {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          }, {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          } ],\n          \"extLinkPorts\" : [ { }, { } ],\n          \"currentVnfExtCpData\" : [ {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          }, {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          } ]\n        } ],\n        \"localizationLanguage\" : \"localizationLanguage\",\n        \"vnfVirtualLinkResourceInfo\" : [ {\n          \"vnfLinkPorts\" : [ null, null ]\n        }, {\n          \"vnfLinkPorts\" : [ null, null ]\n        } ],\n        \"vipCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ],\n          \"associatedVnfcCpIds\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ],\n          \"associatedVnfcCpIds\" : [ null, null ]\n        } ],\n        \"virtualCpInfo\" : [ {\n          \"resourceHandle\" : {\n            \"containerNamespace\" : \"containerNamespace\",\n            \"vimLevelAdditionalResourceInfo\" : {\n              \"hostName\" : \"hostName\",\n              \"persistentVolume\" : \"persistentVolume\"\n            },\n            \"vimLevelResourceType\" : \"vimLevelResourceType\"\n          },\n          \"vduIds\" : [ null, null ],\n          \"cpProtocolInfo\" : [ null, null ],\n          \"additionalServiceInfo\" : [ {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          }, {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          } ]\n        }, {\n          \"resourceHandle\" : {\n            \"containerNamespace\" : \"containerNamespace\",\n            \"vimLevelAdditionalResourceInfo\" : {\n              \"hostName\" : \"hostName\",\n              \"persistentVolume\" : \"persistentVolume\"\n            },\n            \"vimLevelResourceType\" : \"vimLevelResourceType\"\n          },\n          \"vduIds\" : [ null, null ],\n          \"cpProtocolInfo\" : [ null, null ],\n          \"additionalServiceInfo\" : [ {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          }, {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          } ]\n        } ],\n        \"vnfcResourceInfo\" : [ {\n          \"storageResourceIds\" : [ null, null ],\n          \"vnfcCpInfo\" : [ {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          }, {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          } ]\n        }, {\n          \"storageResourceIds\" : [ null, null ],\n          \"vnfcCpInfo\" : [ {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          }, {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          } ]\n        } ],\n        \"extCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          }, {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          } ],\n          \"id\" : \"id\",\n          \"netAttDefResourceId\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          }, {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          } ],\n          \"id\" : \"id\",\n          \"netAttDefResourceId\" : [ null, null ]\n        } ],\n        \"mcioInfo\" : [ {\n          \"mcioName\" : \"mcioName\",\n          \"availableInstances\" : 7,\n          \"mcioNamespace\" : \"mcioNamespace\",\n          \"desiredInstances\" : 2,\n          \"mcioType\" : \"Deployment\"\n        }, {\n          \"mcioName\" : \"mcioName\",\n          \"availableInstances\" : 7,\n          \"mcioNamespace\" : \"mcioNamespace\",\n          \"desiredInstances\" : 2,\n          \"mcioType\" : \"Deployment\"\n        } ]\n      },\n      \"vnfInstanceName\" : \"vnfInstanceName\",\n      \"id\" : \"id\",\n      \"vnfSoftwareVersion\" : \"vnfSoftwareVersion\"\n    }\n  },\n  \"_links\" : { },\n  \"id\" : \"id\"\n}, {\n  \"vnfSnapshot\" : {\n    \"_links\" : {\n      \"self\" : {\n        \"href\" : \"href\"\n      }\n    },\n    \"creationStartedAt\" : \"2000-01-23T04:56:07.000+00:00\",\n    \"vnfcSnapshots\" : [ {\n      \"storageSnapshotResources\" : [ {\n        \"storageSnapshotResource\" : { }\n      }, {\n        \"storageSnapshotResource\" : { }\n      } ],\n      \"computeSnapshotResource\" : {\n        \"containerNamespace\" : \"containerNamespace\",\n        \"vimLevelAdditionalResourceInfo\" : {\n          \"hostName\" : \"hostName\",\n          \"persistentVolume\" : \"persistentVolume\"\n        },\n        \"vimLevelResourceType\" : \"vimLevelResourceType\"\n      },\n      \"vnfcInstanceId\" : \"vnfcInstanceId\",\n      \"id\" : \"id\"\n    }, {\n      \"storageSnapshotResources\" : [ {\n        \"storageSnapshotResource\" : { }\n      }, {\n        \"storageSnapshotResource\" : { }\n      } ],\n      \"computeSnapshotResource\" : {\n        \"containerNamespace\" : \"containerNamespace\",\n        \"vimLevelAdditionalResourceInfo\" : {\n          \"hostName\" : \"hostName\",\n          \"persistentVolume\" : \"persistentVolume\"\n        },\n        \"vimLevelResourceType\" : \"vimLevelResourceType\"\n      },\n      \"vnfcInstanceId\" : \"vnfcInstanceId\",\n      \"id\" : \"id\"\n    } ],\n    \"vnfStateSnapshotInfo\" : {\n      \"isEncrypted\" : true,\n      \"checksum\" : \"checksum\"\n    },\n    \"vnfInstance\" : {\n      \"vnfProductName\" : \"vnfProductName\",\n      \"vimConnectionInfo\" : {\n        \"key\" : {\n          \"vimType\" : \"vimType\"\n        }\n      },\n      \"vnfProvider\" : \"vnfProvider\",\n      \"_links\" : { },\n      \"vnfConfigurableProperties\" : { },\n      \"cirConnectionInfo\" : { },\n      \"certificateInfo\" : {\n        \"certificateContents\" : [ {\n          \"serialNumber\" : 1,\n          \"certificateDescId\" : \"certificateDescId\",\n          \"subject\" : \"subject\",\n          \"publicKeyAlgorithm\" : \"publicKeyAlgorithm\",\n          \"publicKey\" : \"publicKey\",\n          \"signatureAlgorithm\" : \"signatureAlgorithm\",\n          \"issuer\" : \"issuer\",\n          \"notBefore\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"certificateType\" : \"VNFCI_CERT\"\n        }, {\n          \"serialNumber\" : 1,\n          \"certificateDescId\" : \"certificateDescId\",\n          \"subject\" : \"subject\",\n          \"publicKeyAlgorithm\" : \"publicKeyAlgorithm\",\n          \"publicKey\" : \"publicKey\",\n          \"signatureAlgorithm\" : \"signatureAlgorithm\",\n          \"issuer\" : \"issuer\",\n          \"notBefore\" : \"2000-01-23T04:56:07.000+00:00\",\n          \"certificateType\" : \"VNFCI_CERT\"\n        } ],\n        \"certificateConfigurationInfo\" : {\n          \"cmfInfo\" : {\n            \"supportedProtocol\" : [ \"CMP\", \"CMP\" ],\n            \"endPoint\" : {\n              \"ipAddress\" : \"ipAddress\",\n              \"link\" : {\n                \"href\" : \"href\"\n              }\n            },\n            \"certificateChain\" : [ null, null ]\n          },\n          \"securityPolicy\" : [ {\n            \"maxValidityPeriod\" : 0.8008281904610115,\n            \"minimumKeyLength\" : 6.027456183070403,\n            \"allowedAlgorithm\" : \"allowedAlgorithm\"\n          }, {\n            \"maxValidityPeriod\" : 0.8008281904610115,\n            \"minimumKeyLength\" : 6.027456183070403,\n            \"allowedAlgorithm\" : \"allowedAlgorithm\"\n          } ],\n          \"certificateBaseProfile\" : [ {\n            \"subject\" : {\n              \"commonName\" : \"commonName\",\n              \"country\" : \"country\",\n              \"emailAddress\" : \"emailAddress\",\n              \"organization\" : \"organization\",\n              \"locality\" : \"locality\",\n              \"state\" : \"state\"\n            },\n            \"basicConstraints\" : \"basicConstraints\",\n            \"nameConstraints\" : [ \"nameConstraints\", \"nameConstraints\" ],\n            \"issuer\" : \"issuer\",\n            \"issuerAltName\" : [ \"issuerAltName\", \"issuerAltName\" ],\n            \"subjectAltName\" : [ \"subjectAltName\", \"subjectAltName\" ]\n          }, {\n            \"subject\" : {\n              \"commonName\" : \"commonName\",\n              \"country\" : \"country\",\n              \"emailAddress\" : \"emailAddress\",\n              \"organization\" : \"organization\",\n              \"locality\" : \"locality\",\n              \"state\" : \"state\"\n            },\n            \"basicConstraints\" : \"basicConstraints\",\n            \"nameConstraints\" : [ \"nameConstraints\", \"nameConstraints\" ],\n            \"issuer\" : \"issuer\",\n            \"issuerAltName\" : [ \"issuerAltName\", \"issuerAltName\" ],\n            \"subjectAltName\" : [ \"subjectAltName\", \"subjectAltName\" ]\n          } ]\n        }\n      },\n      \"instantiationState\" : \"NOT_INSTANTIATED\",\n      \"vnfInstanceDescription\" : \"vnfInstanceDescription\",\n      \"mciopRepositoryInfo\" : { },\n      \"instantiatedVnfInfo\" : {\n        \"scaleStatus\" : [ { }, { } ],\n        \"extManagedVirtualLinkInfo\" : [ {\n          \"vnfNetAttDefResource\" : [ null, null ],\n          \"vnfLinkPorts\" : [ {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          }, {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          } ]\n        }, {\n          \"vnfNetAttDefResource\" : [ null, null ],\n          \"vnfLinkPorts\" : [ {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          }, {\n            \"cpInstanceType\" : \"VNFC_CP\"\n          } ]\n        } ],\n        \"vnfPaasServiceInfo\" : [ {\n          \"paasServiceHandle\" : { },\n          \"paasServiceType\" : \"paasServiceType\"\n        }, {\n          \"paasServiceHandle\" : { },\n          \"paasServiceType\" : \"paasServiceType\"\n        } ],\n        \"maxScaleLevels\" : [ null, null ],\n        \"selectedDeployableModule\" : [ null, null ],\n        \"vnfState\" : \"STARTED\",\n        \"virtualStorageResourceInfo\" : [ { }, { } ],\n        \"monitoringParameters\" : [ {\n          \"name\" : \"name\",\n          \"performanceMetric\" : \"performanceMetric\"\n        }, {\n          \"name\" : \"name\",\n          \"performanceMetric\" : \"performanceMetric\"\n        } ],\n        \"extVirtualLinkInfo\" : [ {\n          \"extNetAttDefResource\" : [ {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          }, {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          } ],\n          \"extLinkPorts\" : [ { }, { } ],\n          \"currentVnfExtCpData\" : [ {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          }, {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          } ]\n        }, {\n          \"extNetAttDefResource\" : [ {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          }, {\n            \"associatedExtCpId\" : [ null, null ],\n            \"associatedVnfcCpId\" : [ null, null ]\n          } ],\n          \"extLinkPorts\" : [ { }, { } ],\n          \"currentVnfExtCpData\" : [ {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          }, {\n            \"cpConfig\" : {\n              \"key\" : {\n                \"cpProtocolData\" : [ {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                }, {\n                  \"virtualCpAddress\" : {\n                    \"addressPoolName\" : \"addressPoolName\",\n                    \"type\" : \"IPV4\"\n                  },\n                  \"ipOverEthernet\" : {\n                    \"segmentationType\" : \"VLAN\",\n                    \"ipAddresses\" : [ {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    }, {\n                      \"fixedAddresses\" : [ null, null ],\n                      \"addressRange\" : { },\n                      \"type\" : \"IPV4\",\n                      \"numDynamicAddresses\" : 5\n                    } ],\n                    \"segmentationId\" : \"segmentationId\"\n                  },\n                  \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n                } ],\n                \"netAttDefResourceId\" : [ null, null ],\n                \"createExtLinkPort\" : true\n              }\n            }\n          } ]\n        } ],\n        \"localizationLanguage\" : \"localizationLanguage\",\n        \"vnfVirtualLinkResourceInfo\" : [ {\n          \"vnfLinkPorts\" : [ null, null ]\n        }, {\n          \"vnfLinkPorts\" : [ null, null ]\n        } ],\n        \"vipCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ null, null ],\n          \"associatedVnfcCpIds\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ null, null ],\n          \"associatedVnfcCpIds\" : [ null, null ]\n        } ],\n        \"virtualCpInfo\" : [ {\n          \"resourceHandle\" : {\n            \"containerNamespace\" : \"containerNamespace\",\n            \"vimLevelAdditionalResourceInfo\" : {\n              \"hostName\" : \"hostName\",\n              \"persistentVolume\" : \"persistentVolume\"\n            },\n            \"vimLevelResourceType\" : \"vimLevelResourceType\"\n          },\n          \"vduIds\" : [ null, null ],\n          \"cpProtocolInfo\" : [ null, null ],\n          \"additionalServiceInfo\" : [ {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          }, {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          } ]\n        }, {\n          \"resourceHandle\" : {\n            \"containerNamespace\" : \"containerNamespace\",\n            \"vimLevelAdditionalResourceInfo\" : {\n              \"hostName\" : \"hostName\",\n              \"persistentVolume\" : \"persistentVolume\"\n            },\n            \"vimLevelResourceType\" : \"vimLevelResourceType\"\n          },\n          \"vduIds\" : [ null, null ],\n          \"cpProtocolInfo\" : [ null, null ],\n          \"additionalServiceInfo\" : [ {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          }, {\n            \"portInfo\" : [ {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            }, {\n              \"protocol\" : \"TCP\",\n              \"portConfigurable\" : true,\n              \"port\" : 5,\n              \"name\" : \"name\"\n            } ]\n          } ]\n        } ],\n        \"vnfcResourceInfo\" : [ {\n          \"storageResourceIds\" : [ null, null ],\n          \"vnfcCpInfo\" : [ {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          }, {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          } ]\n        }, {\n          \"storageResourceIds\" : [ null, null ],\n          \"vnfcCpInfo\" : [ {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          }, {\n            \"cpProtocolInfo\" : [ null, null ],\n            \"netAttDefResourceId\" : [ null, null ]\n          } ]\n        } ],\n        \"extCpInfo\" : [ {\n          \"cpProtocolInfo\" : [ {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          }, {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          } ],\n          \"id\" : \"id\",\n          \"netAttDefResourceId\" : [ null, null ]\n        }, {\n          \"cpProtocolInfo\" : [ {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          }, {\n            \"virtualCpAddress\" : {\n              \"addressPoolName\" : \"addressPoolName\",\n              \"type\" : \"IPV4\"\n            },\n            \"ipOverEthernet\" : {\n              \"macAddress\" : \"macAddress\",\n              \"ipAddresses\" : [ {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              }, {\n                \"subnetId\" : \"subnetId\",\n                \"addresses\" : [ null, null ],\n                \"isDynamic\" : true,\n                \"addressRange\" : { },\n                \"type\" : \"IPV4\"\n              } ],\n              \"segmentationId\" : \"segmentationId\"\n            },\n            \"layerProtocol\" : \"IP_OVER_ETHERNET\"\n          } ],\n          \"id\" : \"id\",\n          \"netAttDefResourceId\" : [ null, null ]\n        } ],\n        \"mcioInfo\" : [ {\n          \"mcioName\" : \"mcioName\",\n          \"availableInstances\" : 7,\n          \"mcioNamespace\" : \"mcioNamespace\",\n          \"desiredInstances\" : 2,\n          \"mcioType\" : \"Deployment\"\n        }, {\n          \"mcioName\" : \"mcioName\",\n          \"availableInstances\" : 7,\n          \"mcioNamespace\" : \"mcioNamespace\",\n          \"desiredInstances\" : 2,\n          \"mcioType\" : \"Deployment\"\n        } ]\n      },\n      \"vnfInstanceName\" : \"vnfInstanceName\",\n      \"id\" : \"id\",\n      \"vnfSoftwareVersion\" : \"vnfSoftwareVersion\"\n    }\n  },\n  \"_links\" : { },\n  \"id\" : \"id\"\n} ]",
							List.class), HttpStatus.NOT_IMPLEMENTED);
				} catch (final IOException e) {
					log.error("Couldn't serialize response for content type application/json", e);
					return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
				}
			}
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default VnfSnapshotsApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

	@Operation(summary = "", description = "This method modifies an \"Individual VNF snapshot\" resource. See clause 5.4.24.3.4. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "200", description = "200 OK  Shall be returned when the modification of VNF snapshot information has been accepted and completed. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = VnfSnapshotInfoModifications.class))),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the message content contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a message content with an empty array. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "409", description = "409 CONFLICT  Shall be returned upon the following error: The operation cannot be executed currently, due to a conflict with the state of the \"Individual VNF snapshot\" resource. Typically, this is due to the fact another modification is ongoing or that the \"Individual VNF snapshot\" resource information is not empty due to a previously successful modification or currently being modified due to an underlying VNF snapshot operation. The response body shall contain a ProblemDetails structure, in which the \"detail\" attribute should convey more information about the error. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "412", description = "412 Precondition Failed  Shall be returned upon the following error: A precondition given in an HTTP request header is not fulfilled. Typically, this is due to an ETag mismatch, indicating that the resource was modified by another entity. The response body should contain a ProblemDetails structure, in which the \"detail\" attribute should convey more information about the error. "),

			@ApiResponse(responseCode = "416", description = "416 Range Not Satisfiable ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/vnf_snapshots/{vnfSnapshotInfoId}", produces = { "application/json" }, consumes = { "application/json" }, method = RequestMethod.PATCH)
	ResponseEntity<VnfSnapshotInfoModifications> vnfSnapshotsVnfSnapshotInfoIdPatch(
			@Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version,
			@Parameter(in = ParameterIn.HEADER, description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. ", required = true, schema = @Schema()) @RequestHeader(value = "Accept", required = true) final String accept,
			@Parameter(in = ParameterIn.HEADER, description = "The MIME type of the body of the request. Reference: IETF RFC 7231 ", required = true, schema = @Schema()) @RequestHeader(value = "Content-Type", required = true) final String contentType,
			@Parameter(in = ParameterIn.PATH, description = "Identifier of the \"Individual VNF snapshot\" resource. This identifier can be retrieved  from the resource referenced by the \"Location\" HTTP header in the response to a POST request  creating a new VNF snapshot resource. It can also be retrieved from the \"id\" attribute in the message content of that response.         ", required = true, schema = @Schema()) @PathVariable("vnfSnapshotInfoId") final String vnfSnapshotInfoId,
			@Parameter(in = ParameterIn.DEFAULT, description = "Parameters for the VNF snapshot information modification, as defined in clause 5.5.2.24.", required = true, schema = @Schema()) @Valid @RequestBody VnfSnapshotInfoModificationRequest body,
			@Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) String authorization,
			@Parameter(in = ParameterIn.HEADER, description = "Used to make the request method   conditional on the selected resource representation's last modification date being earlier than or equal to the date provided in the field-value. If the condition is not met, the request fails with a \"412 Precondition Failed\" response. ", schema = @Schema()) @RequestHeader(value = "If-Unmodified-Since", required = false) OffsetDateTime ifUnmodifiedSince,
			@Parameter(in = ParameterIn.HEADER, description = "Used to make the request method conditional on the recipient origin server either having at least one current representation of the target resource, when the field-value is \"*\", or having a current representation of the target resource that has an entity-tag matching a member of the list of entity-tags provided in the field-value. If the condition is not met, the request fails with a \"412 Precondition Failed\" response. ", schema = @Schema()) @RequestHeader(value = "If-Match", required = false) String ifMatch);

	@Operation(summary = "", description = "The GET method fetches the content of the VNF state snapshot.  This method shall follow the provisions specified in the tables 5.4.25.3.2-1 and 5.4.25.3.2-2  for URI query parameters, request and response data structures, and response codes. ", tags = {})
	@ApiResponses(value = {
			@ApiResponse(responseCode = "200", description = "200 OK  Shall be returned when the whole content of the VNF state snapshot file has been read successfully.  The message content shall contain a copy of the VNF state snapshot file and the \"Content-Type\" HTTP header shall be set according to the content type of the VNF state snapshot file. If the VNF state  snapshot content is encrypted, the header shall be set to the value \"application/cms\" (IETF RFC 7193).   If the content type cannot be determined, the header shall be set to the value \"application/octet-stream\". ", content = @Content(mediaType = "application/*", schema = @Schema(implementation = Resource.class))),

			@ApiResponse(responseCode = "206", description = "206 PARTIAL CONTENT  If the VNFM supports range requests, this response shall be returned when a single consecutive byte range from the content of the VNF state snapshot file has been read successfully according to the request.  The response body shall contain the requested part of the VNF state snapshot file. The \"Content-Type\" HTTP  header shall be set according to the content type of the VNF state snapshot file. If the content type cannot  be determined, the header shall be set to the value \"application/octet-stream\".  The \"Content-Range\" HTTP header shall be provided according to IETF RFC 7233. ", content = @Content(mediaType = "application/*", schema = @Schema(implementation = Resource.class))),

			@ApiResponse(responseCode = "400", description = "400 BAD REQUEST 400 code can be returned in the following specified cases, the specific cause has to be proper specified in the \"ProblemDetails\" structure to be returned. If the request is malformed or syntactically incorrect (e.g. if the request URI contains incorrect query parameters or the message content contains a syntactically incorrect data structure), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If the response to a GET request which queries a container resource would be so big that the performance of the API producer is adversely affected, and the API producer does not support paging for the affected resource, it shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and should include in the \"detail\" attribute more information about the source of the problem. If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. If the request contains a malformed access token, the API producer should respond with this response. The details of the error shall be returned in the WWW Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. The use of this HTTP error response code described above is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications, as defined in clauses 4.5.3.3 and 4.5.3.4. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "401", description = "401 UNAUTHORIZED If the request contains no access token even though one is required, or if the request contains an authorization token that is invalid (e.g. expired or revoked), the API producer should respond with this response. The details of the error shall be returned in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails structure may be provided. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "403", description = "403 FORBIDDEN If the API consumer is not allowed to perform a particular request to a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided. It should include in the \"detail\" attribute information about the source of the problem, and may indicate how to solve it. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "404", description = "404 NOT FOUND If the API producer did not find a current representation for the resource addressed by the URI passed in the request or is not willing to disclose that one exists, it shall respond with this response code. The \"ProblemDetails\" structure may be provided, including in the \"detail\" attribute information about the source of the problem, e.g. a wrong resource URI variable. This response code is not appropriate in case the resource addressed by the URI is a container resource which is designed to contain child resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container resource, a typical response contains a 200 OK response code and a message content with an empty array. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "405", description = "405 METHOD NOT ALLOWED If a particular HTTP method is not supported for a particular resource, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "406", description = "406 NOT ACCEPTABLE If the \"Accept\" HTTP header does not contain at least one name of a content type that is acceptable to the API producer, the API producer shall respond with this response code. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "409", description = "409 CONFLICT  Shall be returned upon the following error: The operation cannot be executed currently, due to a conflict with the state of the resource. Typically, this is due to the fact that the VNF snapshot creation process is not completed. The response body shall contain a ProblemDetails structure, in which the \"detail\" attribute shall convey more information about the error. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "416", description = "416 RANGE NOT SATISFIABLE  Shall be returned upon the following error: The byte range passed in the \"Range\" header did not match any available byte range in the VNF state snapshot file (e.g. \"access after end of file\"). The response body may contain a ProblemDetails structure "),

			@ApiResponse(responseCode = "500", description = "500 INTERNAL SERVER ERROR If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP response code (\"catch all error\"), the API producer shall respond with this response code. The \"ProblemDetails\" structure shall be provided, and shall include in the \"detail\" attribute more information about the source of the problem. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "503", description = "503 SERVICE UNAVAILABLE If the API producer encounters an internal overload situation of itself or of a system it relies on, it should respond with this response code, following the provisions in IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for the alternative to refuse the connection. The \"ProblemDetails\" structure may be omitted. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))),

			@ApiResponse(responseCode = "504", description = "504 GATEWAY TIMEOUT If the API producer encounters a timeout while waiting for a response from an upstream server (i.e. a server that the API producer communicates with when fulfilling a request), it should respond with this response code. ", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDetails.class))) })
	@RequestMapping(value = "/vnf_snapshots/{vnfSnapshotInfoId}/vnf_state_snapshot", produces = { "application/_*", "application/json" }, method = RequestMethod.GET)
	default ResponseEntity<Resource> vnfSnapshotsVnfSnapshotInfoIdVnfStateSnapshotGet(
			@Parameter(in = ParameterIn.PATH, description = "Identifier of the \"Individual VNF snapshot\" resource. This identifier can be retrieved  from the resource referenced by the \"Location\" HTTP header in the response to a POST request  creating a new VNF snapshot resource. It can also be retrieved from the \"id\" attribute in the message content of that response.         ", required = true, schema = @Schema()) @PathVariable("vnfSnapshotInfoId") final String vnfSnapshotInfoId,
			@Parameter(in = ParameterIn.HEADER, description = "Version of the API requested to use when responding to this request. ", required = true, schema = @Schema()) @RequestHeader(value = "Version", required = true) final String version,
			@Parameter(in = ParameterIn.HEADER, description = "Content-Types that are acceptable for the response. Reference: IETF RFC 7231. ", required = true, schema = @Schema()) @RequestHeader(value = "Accept", required = true) final String accept,
			@Parameter(in = ParameterIn.HEADER, description = "The authorization token for the request. Reference: IETF RFC 7235. ", schema = @Schema()) @RequestHeader(value = "Authorization", required = false) final String authorization,
			@Parameter(in = ParameterIn.HEADER, description = "The request may contain a \"Range\" HTTP header to obtain single range of bytes from a VNF state snapshot file. This can be used to continue an aborted transmission. If the \"Range\" header is present in the request and the VNFM does not support responding to range requests with a 206 response, it shall return a 200 OK response instead. ", schema = @Schema()) @RequestHeader(value = "Range", required = false) final String range) {
		if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
			if (getAcceptHeader().get().contains("application/json")) {
				try {
					return new ResponseEntity<>(getObjectMapper().get().readValue("\"\"", Resource.class), HttpStatus.NOT_IMPLEMENTED);
				} catch (final IOException e) {
					log.error("Couldn't serialize response for content type application/json", e);
					return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
				}
			}
		} else {
			log.warn("ObjectMapper or HttpServletRequest not configured in default VnfSnapshotsApi interface so no example is generated");
		}
		return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
	}

}
